MAIN GOAL: Comp(Atom(ancestor), [Atom(olek), Atom(basia)])
CLAUSES:
0. father(olek, kacper).
1. father(olek, ania).
2. mother(ania, basia).
3. mother(basia, piotr).
4. parent(X, Y) :- mother(X, Y).
5. parent(X, Y) :- father(X, Y).
6. ancestor(X, Y) :- parent(X, Y).
7. ancestor(X, Y) :- parent(X, Z), ancestor(Z, Y).
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
start:
goals: [(-1: Comp(Atom(ancestor), [Atom(olek), Atom(basia)])]
backtracking: []

rule nr 6: Comp(Atom(ancestor), [Var(X), Var(Y)])
goals: [(6: Comp(Atom(parent), [Atom(olek), Atom(basia)]) ; ]
backtracking: [(6: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 4: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(4: Comp(Atom(mother), [Atom(olek), Atom(basia)]) ; ]
backtracking: [(4: Comp(Atom(parent), [Atom(olek), Atom(basia)]) ; (6: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 4 on clause Comp(Atom(parent), [Atom(olek), Atom(basia)])
new goals: [(6: Comp(Atom(parent), [Atom(olek), Atom(basia)]) ; ]
new backtrack: [(6: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 5: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(5: Comp(Atom(father), [Atom(olek), Atom(basia)]) ; ]
backtracking: [(5: Comp(Atom(parent), [Atom(olek), Atom(basia)]) ; (6: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 5 on clause Comp(Atom(parent), [Atom(olek), Atom(basia)])
new goals: [(6: Comp(Atom(parent), [Atom(olek), Atom(basia)]) ; ]
new backtrack: [(6: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 6 on clause Comp(Atom(ancestor), [Atom(olek), Atom(basia)])
goals before filter: [(6: Comp(Atom(parent), [Atom(olek), Atom(basia)]) ; ]
new goals: [(-1: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]
new backtrack: []

rule nr 7: Comp(Atom(ancestor), [Var(X), Var(Y)])
goals: [(7: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 4: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(4: Comp(Atom(mother), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(4: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 4 on clause Comp(Atom(parent), [Atom(olek), Var(Z)])
new goals: [(7: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
new backtrack: [(7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 5: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(5: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

fact nr 0: Comp(Atom(father), [Atom(olek), Atom(kacper)])
goals: [(7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 6: Comp(Atom(ancestor), [Var(X), Var(Y)])
goals: [(6: Comp(Atom(parent), [Atom(kacper), Atom(basia)]) ; ]
backtracking: [(6: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 4: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(4: Comp(Atom(mother), [Atom(kacper), Atom(basia)]) ; ]
backtracking: [(4: Comp(Atom(parent), [Atom(kacper), Atom(basia)]) ; (6: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 4 on clause Comp(Atom(parent), [Atom(kacper), Atom(basia)])
new goals: [(6: Comp(Atom(parent), [Atom(kacper), Atom(basia)]) ; ]
new backtrack: [(6: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 5: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(5: Comp(Atom(father), [Atom(kacper), Atom(basia)]) ; ]
backtracking: [(5: Comp(Atom(parent), [Atom(kacper), Atom(basia)]) ; (6: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 5 on clause Comp(Atom(parent), [Atom(kacper), Atom(basia)])
new goals: [(6: Comp(Atom(parent), [Atom(kacper), Atom(basia)]) ; ]
new backtrack: [(6: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 6 on clause Comp(Atom(ancestor), [Atom(kacper), Atom(basia)])
new goals: [(0: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; ]
new backtrack: [(0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 7: Comp(Atom(ancestor), [Var(X), Var(Y)])
goals: [(7: Comp(Atom(parent), [Atom(kacper), Var(Z)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(7: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 4: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(4: Comp(Atom(mother), [Atom(kacper), Atom(kacper)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(4: Comp(Atom(parent), [Atom(kacper), Atom(kacper)]) ; (7: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 4 on clause Comp(Atom(parent), [Atom(kacper), Atom(kacper)])
new goals: [(7: Comp(Atom(parent), [Atom(kacper), Atom(kacper)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
new backtrack: [(7: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

rule nr 5: Comp(Atom(parent), [Var(X), Var(Y)])
goals: [(5: Comp(Atom(father), [Atom(kacper), Atom(kacper)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
backtracking: [(5: Comp(Atom(parent), [Atom(kacper), Atom(kacper)]) ; (7: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 5 on clause Comp(Atom(parent), [Atom(kacper), Atom(kacper)])
new goals: [(7: Comp(Atom(parent), [Atom(kacper), Atom(kacper)]) ; (7: Comp(Atom(ancestor), [Var(Z), Atom(basia)]) ; ]
new backtrack: [(7: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; (0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

!backtrack 7 on clause Comp(Atom(ancestor), [Atom(kacper), Atom(basia)])
new goals: [(0: Comp(Atom(ancestor), [Atom(kacper), Atom(basia)]) ; ]
new backtrack: [(0: Comp(Atom(father), [Atom(olek), Var(Z)]) ; (5: Comp(Atom(parent), [Atom(olek), Var(Z)]) ; (7: Comp(Atom(ancestor), [Atom(olek), Atom(basia)]) ; ]

false

---------------------------------------------------------------------------------------------------------------------------------------------------------------
File "test_eval/test_ancestors.ml", line 11, characters 0-95: test ancestor2 threw
(runtime-lib/runtime.ml.E "comparison failed"
  (false vs true (Loc test_eval/test_ancestors.ml:12:13))).
  Raised at Ppx_assert_lib__Runtime.test_eq in file "runtime-lib/runtime.ml", line 95, characters 22-69
  Called from Test_eval__Test_ancestors.(fun) in file "test_eval/test_ancestors.ml", line 12, characters 13-17

File "test_eval/test_ancestors.ml", line 14, characters 0-95: test ancestor3 threw
(runtime-lib/runtime.ml.E "comparison failed"
  (false vs true (Loc test_eval/test_ancestors.ml:15:13))).
  Raised at Ppx_assert_lib__Runtime.test_eq in file "runtime-lib/runtime.ml", line 95, characters 22-69
  Called from Test_eval__Test_ancestors.(fun) in file "test_eval/test_ancestors.ml", line 15, characters 13-17
